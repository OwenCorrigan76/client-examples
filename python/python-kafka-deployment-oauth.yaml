apiVersion: kafka.strimzi.io/v1beta1
kind: KafkaTopic
metadata:
  name: my-topic
  labels:
      strimzi.io/cluster: my-cluster
spec:
  replicas: 3
  partitions: 12
---
apiVersion: kafka.strimzi.io/v1beta1
kind: KafkaTopic
metadata:
  name: my-topic-reversed
  labels:
    strimzi.io/cluster: my-cluster
spec:
  replicas: 3
  partitions: 12
---
apiVersion: v1
kind: Secret
metadata:
  name: python-kafka-producer-oauth
type: Opaque
data:
  clientSecret: SURUS3hZbTFyc2c5bWxrakNlY01kYmRwQVNRRGpDckE=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: python-kafka-producer
  name: python-kafka-producer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: python-kafka-producer
  template:
    metadata:
      labels:
        app: python-kafka-producer
    spec:
      containers:
        - name: python-kafka-producer
          image: docker.io/owenerz/python-kafka-producer:latest
          env:
            - name: STRIMZI_TOPIC
              value: my-topic
            - name: STRIMZI_DELAY_MS
              value: "10"
            - name: STRIMZI_LOG_LEVEL
              value: "1"

            - name: SASL_OAUTHBEARER_CLIENT_ID
              value: python-kafka-producer
#            - name: SASL_OAUTHBEARER_CLIENT_SECRET
#              valueFrom:
#                secretKeyRef:
#                  name: python-kafka-producer-oauth
#                  key: clientSecret
#            - name: SASL_OAUTHBEARER_ENDPOINT_URL
#              value: https://keycloak:8443/auth/realms/kafka-authz/protocol/openid-connect/token
#            - name: OAUTH_SSL_TRUSTSTORE_TYPE
#              value: PEM
            - name: OAUTH_SSL_TRUSTSTORE_CERTIFICATES
              valueFrom:
                secretKeyRef:
                  name: tls-keys
                  key: tls.crt
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: my-cluster-kafka-bootstrap:9093
            - name: KAFKA_SECURITY_PROTOCOL
              value: "SASL_PLAINTEXT"
            - name: KAFKA_SASL_MECHANISMS
              value: OAUTHBEARER
#            - name: KAFKA_SSL_CA_PEM
#              valueFrom:
#                secretKeyRef:
#                  name: my-cluster-cluster-ca-cert
#                  key: ca.crt
#---
#apiVersion: v1
#kind: Secret
#metadata:
#  name: python-kafka-consumer-oauth
#type: Opaque
#data:
#  clientSecret: cVVKNFlWTlJsbnNUVUgxTGViMVpvR0lxMHNrSXJJT0s=
#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  labels:
#    app: python-kafka-consumer
#  name: python-kafka-consumer
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: python-kafka-consumer
#  template:
#    metadata:
#      labels:
#        app: python-kafka-consumer
#    spec:
#      containers:
#        - name: python-kafka-consumer
#          image: docker.io/owenerz/python-kafka-consumer:latest
#          env:
#            - name: STRIMZI_TOPIC
#              value: my-topic
#            - name: STRIMZI_DELAY_MS
#              value: "10"
#            - name: LOG_LEVEL
#              value: "1"
#            - name: SASL_OAUTHBEARER_METHOD
#              value: default
#            - name: SASL_OAUTHBEARER_CLIENT_ID
#              value: python-kafka-consumer
#            - name: SASL_OAUTHBEARER_CLIENT_SECRET
#              valueFrom:
#                secretKeyRef:
#                  name: python-kafka-consumer-oauth
#                  key: clientSecret
#            - name: SASL_OAUTHBEARER_ENDPOINT_URL
#              value: https://keycloak:8443/auth/realms/kafka-authz/protocol/openid-connect/token
#            - name: OAUTH_SSL_TRUSTSTORE_TYPE
#              value: PEM
#            - name: OAUTH_SSL_TRUSTSTORE_CERTIFICATES
#              valueFrom:
#                secretKeyRef:
#                  name: tls-keys
#                  key: tls.crt
#            - name: KAFKA_BOOTSTRAP_SERVERS
#              value: my-cluster-kafka-bootstrap:9093
#            - name: KAFKA_SECURITY_PROTOCOL
#              value: "SASL_SSL"
#            - name: KAFKA_SASL_MECHANISMS
#              value: OAUTHBEARER
#            - name: KAFKA_SSL_CA_PEM
#              valueFrom:
#                secretKeyRef:
#                  name: my-cluster-cluster-ca-cert
#                  key: ca.crt